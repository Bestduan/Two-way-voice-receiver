// -------------------------------------------------------------
//
// Module: FIR_125K_10K_LPF
// Generated by MATLAB(R) 8.3 and the Filter Design HDL Coder 2.9.5.
// Generated on: 2019-11-22 21:58:28
// -------------------------------------------------------------

// -------------------------------------------------------------
// HDL Code Generation Options:
//
// CoeffMultipliers: CSD
// TargetDirectory: E:\project\My_FPGA\Vivadio\ZYNQ\project\Match\Match_0\Match_C\Match_C.srcs\sources_1\new
// EDAScriptGeneration: off
// Name: FIR_125K_10K_LPF
// TargetLanguage: Verilog
// TestBenchStimulus: impulse step ramp chirp noise 
// GenerateHDLTestBench: off

// -------------------------------------------------------------
// HDL Implementation    : Fully parallel
// Multipliers           : 41
// Folding Factor        : 1
// -------------------------------------------------------------
// Filter Settings:
//
// Discrete-Time FIR Filter (real)
// -------------------------------
// Filter Structure  : Direct-Form FIR
// Filter Length     : 41
// Stable            : Yes
// Linear Phase      : Yes (Type 1)
// Arithmetic        : fixed
// Numerator         : s12,14 -> [-1.250000e-01 1.250000e-01)
// Input             : s12,11 -> [-1 1)
// Filter Internals  : Full Precision
//   Output          : s27,25 -> [-2 2)  (auto determined)
//   Product         : s23,25 -> [-1.250000e-01 1.250000e-01)  (auto determined)
//   Accumulator     : s27,25 -> [-2 2)  (auto determined)
//   Round Mode      : No rounding
//   Overflow Mode   : No overflow
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module FIR_125K_10K_LPF
               (
                clk,
                clk_enable,
                reset,
                filter_in,
                filter_out
                );

  input   clk; 
  input   clk_enable; 
  input   reset; 
  input   signed [11:0] filter_in; //sfix12_En11
  output  signed [26:0] filter_out; //sfix27_En25

////////////////////////////////////////////////////////////////
//Module Architecture: FIR_125K_10K_LPF
////////////////////////////////////////////////////////////////
  // Local Functions
  // Type Definitions
  // Constants
  parameter signed [11:0] coeff1 = 12'b000000001101; //sfix12_En14
  parameter signed [11:0] coeff2 = 12'b111111000001; //sfix12_En14
  parameter signed [11:0] coeff3 = 12'b111110101000; //sfix12_En14
  parameter signed [11:0] coeff4 = 12'b111101111010; //sfix12_En14
  parameter signed [11:0] coeff5 = 12'b111101000110; //sfix12_En14
  parameter signed [11:0] coeff6 = 12'b111100010011; //sfix12_En14
  parameter signed [11:0] coeff7 = 12'b111011101011; //sfix12_En14
  parameter signed [11:0] coeff8 = 12'b111011011000; //sfix12_En14
  parameter signed [11:0] coeff9 = 12'b111011100101; //sfix12_En14
  parameter signed [11:0] coeff10 = 12'b111100011010; //sfix12_En14
  parameter signed [11:0] coeff11 = 12'b111101111110; //sfix12_En14
  parameter signed [11:0] coeff12 = 12'b000000010011; //sfix12_En14
  parameter signed [11:0] coeff13 = 12'b000011010111; //sfix12_En14
  parameter signed [11:0] coeff14 = 12'b000111000010; //sfix12_En14
  parameter signed [11:0] coeff15 = 12'b001011000111; //sfix12_En14
  parameter signed [11:0] coeff16 = 12'b001111010101; //sfix12_En14
  parameter signed [11:0] coeff17 = 12'b010011011000; //sfix12_En14
  parameter signed [11:0] coeff18 = 12'b010110111101; //sfix12_En14
  parameter signed [11:0] coeff19 = 12'b011001110000; //sfix12_En14
  parameter signed [11:0] coeff20 = 12'b011011100010; //sfix12_En14
  parameter signed [11:0] coeff21 = 12'b011100001001; //sfix12_En14
  parameter signed [11:0] coeff22 = 12'b011011100010; //sfix12_En14
  parameter signed [11:0] coeff23 = 12'b011001110000; //sfix12_En14
  parameter signed [11:0] coeff24 = 12'b010110111101; //sfix12_En14
  parameter signed [11:0] coeff25 = 12'b010011011000; //sfix12_En14
  parameter signed [11:0] coeff26 = 12'b001111010101; //sfix12_En14
  parameter signed [11:0] coeff27 = 12'b001011000111; //sfix12_En14
  parameter signed [11:0] coeff28 = 12'b000111000010; //sfix12_En14
  parameter signed [11:0] coeff29 = 12'b000011010111; //sfix12_En14
  parameter signed [11:0] coeff30 = 12'b000000010011; //sfix12_En14
  parameter signed [11:0] coeff31 = 12'b111101111110; //sfix12_En14
  parameter signed [11:0] coeff32 = 12'b111100011010; //sfix12_En14
  parameter signed [11:0] coeff33 = 12'b111011100101; //sfix12_En14
  parameter signed [11:0] coeff34 = 12'b111011011000; //sfix12_En14
  parameter signed [11:0] coeff35 = 12'b111011101011; //sfix12_En14
  parameter signed [11:0] coeff36 = 12'b111100010011; //sfix12_En14
  parameter signed [11:0] coeff37 = 12'b111101000110; //sfix12_En14
  parameter signed [11:0] coeff38 = 12'b111101111010; //sfix12_En14
  parameter signed [11:0] coeff39 = 12'b111110101000; //sfix12_En14
  parameter signed [11:0] coeff40 = 12'b111111000001; //sfix12_En14
  parameter signed [11:0] coeff41 = 12'b000000001101; //sfix12_En14

  // Signals
  reg  signed [11:0] delay_pipeline [0:40] ; // sfix12_En11
  wire signed [22:0] product41; // sfix23_En25
  wire signed [16:0] mulcsd_temp; // sfix17_En25
  wire signed [22:0] product40; // sfix23_En25
  wire signed [18:0] mulcsd_temp_1; // sfix19_En25
  wire signed [22:0] product39; // sfix23_En25
  wire signed [18:0] mulcsd_temp_2; // sfix19_En25
  wire signed [22:0] product38; // sfix23_En25
  wire signed [19:0] mulcsd_temp_3; // sfix20_En25
  wire signed [22:0] product37; // sfix23_En25
  wire signed [19:0] mulcsd_temp_4; // sfix20_En25
  wire signed [22:0] product36; // sfix23_En25
  wire signed [20:0] mulcsd_temp_5; // sfix21_En25
  wire signed [22:0] product35; // sfix23_En25
  wire signed [20:0] mulcsd_temp_6; // sfix21_En25
  wire signed [22:0] product34; // sfix23_En25
  wire signed [20:0] mulcsd_temp_7; // sfix21_En25
  wire signed [22:0] product33; // sfix23_En25
  wire signed [20:0] mulcsd_temp_8; // sfix21_En25
  wire signed [22:0] product32; // sfix23_En25
  wire signed [20:0] mulcsd_temp_9; // sfix21_En25
  wire signed [22:0] product31; // sfix23_En25
  wire signed [19:0] mulcsd_temp_10; // sfix20_En25
  wire signed [22:0] product30; // sfix23_En25
  wire signed [16:0] mulcsd_temp_11; // sfix17_En25
  wire signed [22:0] product29; // sfix23_En25
  wire signed [20:0] mulcsd_temp_12; // sfix21_En25
  wire signed [22:0] product28; // sfix23_En25
  wire signed [21:0] mulcsd_temp_13; // sfix22_En25
  wire signed [22:0] product27; // sfix23_En25
  wire signed [21:0] mulcsd_temp_14; // sfix22_En25
  wire signed [22:0] product26; // sfix23_En25
  wire signed [22:0] mulcsd_temp_15; // sfix23_En25
  wire signed [22:0] product25; // sfix23_En25
  wire signed [22:0] mulcsd_temp_16; // sfix23_En25
  wire signed [22:0] product24; // sfix23_En25
  wire signed [22:0] mulcsd_temp_17; // sfix23_En25
  wire signed [22:0] product23; // sfix23_En25
  wire signed [23:0] mulcsd_temp_18; // sfix24_En25
  wire signed [22:0] product22; // sfix23_En25
  wire signed [23:0] mulcsd_temp_19; // sfix24_En25
  wire signed [22:0] product21; // sfix23_En25
  wire signed [23:0] mulcsd_temp_20; // sfix24_En25
  wire signed [22:0] product20; // sfix23_En25
  wire signed [23:0] mulcsd_temp_21; // sfix24_En25
  wire signed [22:0] product19; // sfix23_En25
  wire signed [23:0] mulcsd_temp_22; // sfix24_En25
  wire signed [22:0] product18; // sfix23_En25
  wire signed [22:0] mulcsd_temp_23; // sfix23_En25
  wire signed [22:0] product17; // sfix23_En25
  wire signed [22:0] mulcsd_temp_24; // sfix23_En25
  wire signed [22:0] product16; // sfix23_En25
  wire signed [22:0] mulcsd_temp_25; // sfix23_En25
  wire signed [22:0] product15; // sfix23_En25
  wire signed [21:0] mulcsd_temp_26; // sfix22_En25
  wire signed [22:0] product14; // sfix23_En25
  wire signed [21:0] mulcsd_temp_27; // sfix22_En25
  wire signed [22:0] product13; // sfix23_En25
  wire signed [20:0] mulcsd_temp_28; // sfix21_En25
  wire signed [22:0] product12; // sfix23_En25
  wire signed [16:0] mulcsd_temp_29; // sfix17_En25
  wire signed [22:0] product11; // sfix23_En25
  wire signed [19:0] mulcsd_temp_30; // sfix20_En25
  wire signed [22:0] product10; // sfix23_En25
  wire signed [20:0] mulcsd_temp_31; // sfix21_En25
  wire signed [22:0] product9; // sfix23_En25
  wire signed [20:0] mulcsd_temp_32; // sfix21_En25
  wire signed [22:0] product8; // sfix23_En25
  wire signed [20:0] mulcsd_temp_33; // sfix21_En25
  wire signed [22:0] product7; // sfix23_En25
  wire signed [20:0] mulcsd_temp_34; // sfix21_En25
  wire signed [22:0] product6; // sfix23_En25
  wire signed [20:0] mulcsd_temp_35; // sfix21_En25
  wire signed [22:0] product5; // sfix23_En25
  wire signed [19:0] mulcsd_temp_36; // sfix20_En25
  wire signed [22:0] product4; // sfix23_En25
  wire signed [19:0] mulcsd_temp_37; // sfix20_En25
  wire signed [22:0] product3; // sfix23_En25
  wire signed [18:0] mulcsd_temp_38; // sfix19_En25
  wire signed [22:0] product2; // sfix23_En25
  wire signed [18:0] mulcsd_temp_39; // sfix19_En25
  wire signed [26:0] product1_cast; // sfix27_En25
  wire signed [22:0] product1; // sfix23_En25
  wire signed [16:0] mulcsd_temp_40; // sfix17_En25
  wire signed [26:0] sum1; // sfix27_En25
  wire signed [26:0] add_signext; // sfix27_En25
  wire signed [26:0] add_signext_1; // sfix27_En25
  wire signed [27:0] add_temp; // sfix28_En25
  wire signed [26:0] sum2; // sfix27_En25
  wire signed [26:0] add_signext_2; // sfix27_En25
  wire signed [26:0] add_signext_3; // sfix27_En25
  wire signed [27:0] add_temp_1; // sfix28_En25
  wire signed [26:0] sum3; // sfix27_En25
  wire signed [26:0] add_signext_4; // sfix27_En25
  wire signed [26:0] add_signext_5; // sfix27_En25
  wire signed [27:0] add_temp_2; // sfix28_En25
  wire signed [26:0] sum4; // sfix27_En25
  wire signed [26:0] add_signext_6; // sfix27_En25
  wire signed [26:0] add_signext_7; // sfix27_En25
  wire signed [27:0] add_temp_3; // sfix28_En25
  wire signed [26:0] sum5; // sfix27_En25
  wire signed [26:0] add_signext_8; // sfix27_En25
  wire signed [26:0] add_signext_9; // sfix27_En25
  wire signed [27:0] add_temp_4; // sfix28_En25
  wire signed [26:0] sum6; // sfix27_En25
  wire signed [26:0] add_signext_10; // sfix27_En25
  wire signed [26:0] add_signext_11; // sfix27_En25
  wire signed [27:0] add_temp_5; // sfix28_En25
  wire signed [26:0] sum7; // sfix27_En25
  wire signed [26:0] add_signext_12; // sfix27_En25
  wire signed [26:0] add_signext_13; // sfix27_En25
  wire signed [27:0] add_temp_6; // sfix28_En25
  wire signed [26:0] sum8; // sfix27_En25
  wire signed [26:0] add_signext_14; // sfix27_En25
  wire signed [26:0] add_signext_15; // sfix27_En25
  wire signed [27:0] add_temp_7; // sfix28_En25
  wire signed [26:0] sum9; // sfix27_En25
  wire signed [26:0] add_signext_16; // sfix27_En25
  wire signed [26:0] add_signext_17; // sfix27_En25
  wire signed [27:0] add_temp_8; // sfix28_En25
  wire signed [26:0] sum10; // sfix27_En25
  wire signed [26:0] add_signext_18; // sfix27_En25
  wire signed [26:0] add_signext_19; // sfix27_En25
  wire signed [27:0] add_temp_9; // sfix28_En25
  wire signed [26:0] sum11; // sfix27_En25
  wire signed [26:0] add_signext_20; // sfix27_En25
  wire signed [26:0] add_signext_21; // sfix27_En25
  wire signed [27:0] add_temp_10; // sfix28_En25
  wire signed [26:0] sum12; // sfix27_En25
  wire signed [26:0] add_signext_22; // sfix27_En25
  wire signed [26:0] add_signext_23; // sfix27_En25
  wire signed [27:0] add_temp_11; // sfix28_En25
  wire signed [26:0] sum13; // sfix27_En25
  wire signed [26:0] add_signext_24; // sfix27_En25
  wire signed [26:0] add_signext_25; // sfix27_En25
  wire signed [27:0] add_temp_12; // sfix28_En25
  wire signed [26:0] sum14; // sfix27_En25
  wire signed [26:0] add_signext_26; // sfix27_En25
  wire signed [26:0] add_signext_27; // sfix27_En25
  wire signed [27:0] add_temp_13; // sfix28_En25
  wire signed [26:0] sum15; // sfix27_En25
  wire signed [26:0] add_signext_28; // sfix27_En25
  wire signed [26:0] add_signext_29; // sfix27_En25
  wire signed [27:0] add_temp_14; // sfix28_En25
  wire signed [26:0] sum16; // sfix27_En25
  wire signed [26:0] add_signext_30; // sfix27_En25
  wire signed [26:0] add_signext_31; // sfix27_En25
  wire signed [27:0] add_temp_15; // sfix28_En25
  wire signed [26:0] sum17; // sfix27_En25
  wire signed [26:0] add_signext_32; // sfix27_En25
  wire signed [26:0] add_signext_33; // sfix27_En25
  wire signed [27:0] add_temp_16; // sfix28_En25
  wire signed [26:0] sum18; // sfix27_En25
  wire signed [26:0] add_signext_34; // sfix27_En25
  wire signed [26:0] add_signext_35; // sfix27_En25
  wire signed [27:0] add_temp_17; // sfix28_En25
  wire signed [26:0] sum19; // sfix27_En25
  wire signed [26:0] add_signext_36; // sfix27_En25
  wire signed [26:0] add_signext_37; // sfix27_En25
  wire signed [27:0] add_temp_18; // sfix28_En25
  wire signed [26:0] sum20; // sfix27_En25
  wire signed [26:0] add_signext_38; // sfix27_En25
  wire signed [26:0] add_signext_39; // sfix27_En25
  wire signed [27:0] add_temp_19; // sfix28_En25
  wire signed [26:0] sum21; // sfix27_En25
  wire signed [26:0] add_signext_40; // sfix27_En25
  wire signed [26:0] add_signext_41; // sfix27_En25
  wire signed [27:0] add_temp_20; // sfix28_En25
  wire signed [26:0] sum22; // sfix27_En25
  wire signed [26:0] add_signext_42; // sfix27_En25
  wire signed [26:0] add_signext_43; // sfix27_En25
  wire signed [27:0] add_temp_21; // sfix28_En25
  wire signed [26:0] sum23; // sfix27_En25
  wire signed [26:0] add_signext_44; // sfix27_En25
  wire signed [26:0] add_signext_45; // sfix27_En25
  wire signed [27:0] add_temp_22; // sfix28_En25
  wire signed [26:0] sum24; // sfix27_En25
  wire signed [26:0] add_signext_46; // sfix27_En25
  wire signed [26:0] add_signext_47; // sfix27_En25
  wire signed [27:0] add_temp_23; // sfix28_En25
  wire signed [26:0] sum25; // sfix27_En25
  wire signed [26:0] add_signext_48; // sfix27_En25
  wire signed [26:0] add_signext_49; // sfix27_En25
  wire signed [27:0] add_temp_24; // sfix28_En25
  wire signed [26:0] sum26; // sfix27_En25
  wire signed [26:0] add_signext_50; // sfix27_En25
  wire signed [26:0] add_signext_51; // sfix27_En25
  wire signed [27:0] add_temp_25; // sfix28_En25
  wire signed [26:0] sum27; // sfix27_En25
  wire signed [26:0] add_signext_52; // sfix27_En25
  wire signed [26:0] add_signext_53; // sfix27_En25
  wire signed [27:0] add_temp_26; // sfix28_En25
  wire signed [26:0] sum28; // sfix27_En25
  wire signed [26:0] add_signext_54; // sfix27_En25
  wire signed [26:0] add_signext_55; // sfix27_En25
  wire signed [27:0] add_temp_27; // sfix28_En25
  wire signed [26:0] sum29; // sfix27_En25
  wire signed [26:0] add_signext_56; // sfix27_En25
  wire signed [26:0] add_signext_57; // sfix27_En25
  wire signed [27:0] add_temp_28; // sfix28_En25
  wire signed [26:0] sum30; // sfix27_En25
  wire signed [26:0] add_signext_58; // sfix27_En25
  wire signed [26:0] add_signext_59; // sfix27_En25
  wire signed [27:0] add_temp_29; // sfix28_En25
  wire signed [26:0] sum31; // sfix27_En25
  wire signed [26:0] add_signext_60; // sfix27_En25
  wire signed [26:0] add_signext_61; // sfix27_En25
  wire signed [27:0] add_temp_30; // sfix28_En25
  wire signed [26:0] sum32; // sfix27_En25
  wire signed [26:0] add_signext_62; // sfix27_En25
  wire signed [26:0] add_signext_63; // sfix27_En25
  wire signed [27:0] add_temp_31; // sfix28_En25
  wire signed [26:0] sum33; // sfix27_En25
  wire signed [26:0] add_signext_64; // sfix27_En25
  wire signed [26:0] add_signext_65; // sfix27_En25
  wire signed [27:0] add_temp_32; // sfix28_En25
  wire signed [26:0] sum34; // sfix27_En25
  wire signed [26:0] add_signext_66; // sfix27_En25
  wire signed [26:0] add_signext_67; // sfix27_En25
  wire signed [27:0] add_temp_33; // sfix28_En25
  wire signed [26:0] sum35; // sfix27_En25
  wire signed [26:0] add_signext_68; // sfix27_En25
  wire signed [26:0] add_signext_69; // sfix27_En25
  wire signed [27:0] add_temp_34; // sfix28_En25
  wire signed [26:0] sum36; // sfix27_En25
  wire signed [26:0] add_signext_70; // sfix27_En25
  wire signed [26:0] add_signext_71; // sfix27_En25
  wire signed [27:0] add_temp_35; // sfix28_En25
  wire signed [26:0] sum37; // sfix27_En25
  wire signed [26:0] add_signext_72; // sfix27_En25
  wire signed [26:0] add_signext_73; // sfix27_En25
  wire signed [27:0] add_temp_36; // sfix28_En25
  wire signed [26:0] sum38; // sfix27_En25
  wire signed [26:0] add_signext_74; // sfix27_En25
  wire signed [26:0] add_signext_75; // sfix27_En25
  wire signed [27:0] add_temp_37; // sfix28_En25
  wire signed [26:0] sum39; // sfix27_En25
  wire signed [26:0] add_signext_76; // sfix27_En25
  wire signed [26:0] add_signext_77; // sfix27_En25
  wire signed [27:0] add_temp_38; // sfix28_En25
  wire signed [26:0] sum40; // sfix27_En25
  wire signed [26:0] add_signext_78; // sfix27_En25
  wire signed [26:0] add_signext_79; // sfix27_En25
  wire signed [27:0] add_temp_39; // sfix28_En25
  reg  signed [26:0] output_register; // sfix27_En25

  // Block Statements
  always @( posedge clk or posedge reset)
    begin: Delay_Pipeline_process
      if (reset == 1'b1) begin
        delay_pipeline[0] <= 0;
        delay_pipeline[1] <= 0;
        delay_pipeline[2] <= 0;
        delay_pipeline[3] <= 0;
        delay_pipeline[4] <= 0;
        delay_pipeline[5] <= 0;
        delay_pipeline[6] <= 0;
        delay_pipeline[7] <= 0;
        delay_pipeline[8] <= 0;
        delay_pipeline[9] <= 0;
        delay_pipeline[10] <= 0;
        delay_pipeline[11] <= 0;
        delay_pipeline[12] <= 0;
        delay_pipeline[13] <= 0;
        delay_pipeline[14] <= 0;
        delay_pipeline[15] <= 0;
        delay_pipeline[16] <= 0;
        delay_pipeline[17] <= 0;
        delay_pipeline[18] <= 0;
        delay_pipeline[19] <= 0;
        delay_pipeline[20] <= 0;
        delay_pipeline[21] <= 0;
        delay_pipeline[22] <= 0;
        delay_pipeline[23] <= 0;
        delay_pipeline[24] <= 0;
        delay_pipeline[25] <= 0;
        delay_pipeline[26] <= 0;
        delay_pipeline[27] <= 0;
        delay_pipeline[28] <= 0;
        delay_pipeline[29] <= 0;
        delay_pipeline[30] <= 0;
        delay_pipeline[31] <= 0;
        delay_pipeline[32] <= 0;
        delay_pipeline[33] <= 0;
        delay_pipeline[34] <= 0;
        delay_pipeline[35] <= 0;
        delay_pipeline[36] <= 0;
        delay_pipeline[37] <= 0;
        delay_pipeline[38] <= 0;
        delay_pipeline[39] <= 0;
        delay_pipeline[40] <= 0;
      end
      else begin
        if (clk_enable == 1'b1) begin
          delay_pipeline[0] <= filter_in;
          delay_pipeline[1] <= delay_pipeline[0];
          delay_pipeline[2] <= delay_pipeline[1];
          delay_pipeline[3] <= delay_pipeline[2];
          delay_pipeline[4] <= delay_pipeline[3];
          delay_pipeline[5] <= delay_pipeline[4];
          delay_pipeline[6] <= delay_pipeline[5];
          delay_pipeline[7] <= delay_pipeline[6];
          delay_pipeline[8] <= delay_pipeline[7];
          delay_pipeline[9] <= delay_pipeline[8];
          delay_pipeline[10] <= delay_pipeline[9];
          delay_pipeline[11] <= delay_pipeline[10];
          delay_pipeline[12] <= delay_pipeline[11];
          delay_pipeline[13] <= delay_pipeline[12];
          delay_pipeline[14] <= delay_pipeline[13];
          delay_pipeline[15] <= delay_pipeline[14];
          delay_pipeline[16] <= delay_pipeline[15];
          delay_pipeline[17] <= delay_pipeline[16];
          delay_pipeline[18] <= delay_pipeline[17];
          delay_pipeline[19] <= delay_pipeline[18];
          delay_pipeline[20] <= delay_pipeline[19];
          delay_pipeline[21] <= delay_pipeline[20];
          delay_pipeline[22] <= delay_pipeline[21];
          delay_pipeline[23] <= delay_pipeline[22];
          delay_pipeline[24] <= delay_pipeline[23];
          delay_pipeline[25] <= delay_pipeline[24];
          delay_pipeline[26] <= delay_pipeline[25];
          delay_pipeline[27] <= delay_pipeline[26];
          delay_pipeline[28] <= delay_pipeline[27];
          delay_pipeline[29] <= delay_pipeline[28];
          delay_pipeline[30] <= delay_pipeline[29];
          delay_pipeline[31] <= delay_pipeline[30];
          delay_pipeline[32] <= delay_pipeline[31];
          delay_pipeline[33] <= delay_pipeline[32];
          delay_pipeline[34] <= delay_pipeline[33];
          delay_pipeline[35] <= delay_pipeline[34];
          delay_pipeline[36] <= delay_pipeline[35];
          delay_pipeline[37] <= delay_pipeline[36];
          delay_pipeline[38] <= delay_pipeline[37];
          delay_pipeline[39] <= delay_pipeline[38];
          delay_pipeline[40] <= delay_pipeline[39];
        end
      end
    end // Delay_Pipeline_process


  assign mulcsd_temp = 
        $signed({delay_pipeline[40], 4'b0000}) -
        $signed({delay_pipeline[40], 2'b00}) +
        delay_pipeline[40];
  assign product41 = $signed({{6{mulcsd_temp[16]}}, mulcsd_temp});

  assign mulcsd_temp_1 = - (
        $signed({delay_pipeline[39], 6'b000000}) -
        delay_pipeline[39]);
  assign product40 = $signed({{4{mulcsd_temp_1[18]}}, mulcsd_temp_1});

  assign mulcsd_temp_2 = - (
        $signed({delay_pipeline[38], 6'b000000}) +
        $signed({delay_pipeline[38], 5'b00000}) -
        $signed({delay_pipeline[38], 3'b000}));
  assign product39 = $signed({{4{mulcsd_temp_2[18]}}, mulcsd_temp_2});

  assign mulcsd_temp_3 = - (
        $signed({delay_pipeline[37], 7'b0000000}) +
        $signed({delay_pipeline[37], 3'b000}) -
        $signed({delay_pipeline[37], 1'b0}));
  assign product38 = $signed({{3{mulcsd_temp_3[19]}}, mulcsd_temp_3});

  assign mulcsd_temp_4 = - (
        $signed({delay_pipeline[36], 7'b0000000}) +
        $signed({delay_pipeline[36], 6'b000000}) -
        $signed({delay_pipeline[36], 3'b000}) +
        $signed({delay_pipeline[36], 1'b0}));
  assign product37 = $signed({{3{mulcsd_temp_4[19]}}, mulcsd_temp_4});

  assign mulcsd_temp_5 = - (
        $signed({delay_pipeline[35], 8'b00000000}) -
        $signed({delay_pipeline[35], 5'b00000}) +
        $signed({delay_pipeline[35], 4'b0000}) -
        $signed({delay_pipeline[35], 2'b00}) +
        delay_pipeline[35]);
  assign product36 = $signed({{2{mulcsd_temp_5[20]}}, mulcsd_temp_5});

  assign mulcsd_temp_6 = - (
        $signed({delay_pipeline[34], 8'b00000000}) +
        $signed({delay_pipeline[34], 4'b0000}) +
        $signed({delay_pipeline[34], 2'b00}) +
        delay_pipeline[34]);
  assign product35 = $signed({{2{mulcsd_temp_6[20]}}, mulcsd_temp_6});

  assign mulcsd_temp_7 = - (
        $signed({delay_pipeline[33], 8'b00000000}) +
        $signed({delay_pipeline[33], 5'b00000}) +
        $signed({delay_pipeline[33], 3'b000}));
  assign product34 = $signed({{2{mulcsd_temp_7[20]}}, mulcsd_temp_7});

  assign mulcsd_temp_8 = - (
        $signed({delay_pipeline[32], 8'b00000000}) +
        $signed({delay_pipeline[32], 5'b00000}) -
        $signed({delay_pipeline[32], 3'b000}) +
        $signed({delay_pipeline[32], 2'b00}) -
        delay_pipeline[32]);
  assign product33 = $signed({{2{mulcsd_temp_8[20]}}, mulcsd_temp_8});

  assign mulcsd_temp_9 = - (
        $signed({delay_pipeline[31], 8'b00000000}) -
        $signed({delay_pipeline[31], 5'b00000}) +
        $signed({delay_pipeline[31], 3'b000}) -
        $signed({delay_pipeline[31], 1'b0}));
  assign product32 = $signed({{2{mulcsd_temp_9[20]}}, mulcsd_temp_9});

  assign mulcsd_temp_10 = - (
        $signed({delay_pipeline[30], 7'b0000000}) +
        $signed({delay_pipeline[30], 1'b0}));
  assign product31 = $signed({{3{mulcsd_temp_10[19]}}, mulcsd_temp_10});

  assign mulcsd_temp_11 = 
        $signed({delay_pipeline[29], 4'b0000}) +
        $signed({delay_pipeline[29], 2'b00}) -
        delay_pipeline[29];
  assign product30 = $signed({{6{mulcsd_temp_11[16]}}, mulcsd_temp_11});

  assign mulcsd_temp_12 = 
        $signed({delay_pipeline[28], 8'b00000000}) -
        $signed({delay_pipeline[28], 6'b000000}) +
        $signed({delay_pipeline[28], 4'b0000}) +
        $signed({delay_pipeline[28], 3'b000}) -
        delay_pipeline[28];
  assign product29 = $signed({{2{mulcsd_temp_12[20]}}, mulcsd_temp_12});

  assign mulcsd_temp_13 = 
        $signed({delay_pipeline[27], 9'b000000000}) -
        $signed({delay_pipeline[27], 6'b000000}) +
        $signed({delay_pipeline[27], 1'b0});
  assign product28 = $signed({{1{mulcsd_temp_13[21]}}, mulcsd_temp_13});

  assign mulcsd_temp_14 = 
        $signed({delay_pipeline[26], 9'b000000000}) +
        $signed({delay_pipeline[26], 8'b00000000}) -
        $signed({delay_pipeline[26], 6'b000000}) +
        $signed({delay_pipeline[26], 3'b000}) -
        delay_pipeline[26];
  assign product27 = $signed({{1{mulcsd_temp_14[21]}}, mulcsd_temp_14});

  assign mulcsd_temp_15 = 
        $signed({delay_pipeline[25], 10'b0000000000}) -
        $signed({delay_pipeline[25], 6'b000000}) +
        $signed({delay_pipeline[25], 4'b0000}) +
        $signed({delay_pipeline[25], 2'b00}) +
        delay_pipeline[25];
  assign product26 = mulcsd_temp_15;

  assign mulcsd_temp_16 = 
        $signed({delay_pipeline[24], 10'b0000000000}) +
        $signed({delay_pipeline[24], 8'b00000000}) -
        $signed({delay_pipeline[24], 6'b000000}) +
        $signed({delay_pipeline[24], 5'b00000}) -
        $signed({delay_pipeline[24], 3'b000});
  assign product25 = mulcsd_temp_16;

  assign mulcsd_temp_17 = 
        $signed({delay_pipeline[23], 10'b0000000000}) +
        $signed({delay_pipeline[23], 9'b000000000}) -
        $signed({delay_pipeline[23], 7'b0000000}) +
        $signed({delay_pipeline[23], 6'b000000}) -
        $signed({delay_pipeline[23], 2'b00}) +
        delay_pipeline[23];
  assign product24 = mulcsd_temp_17;

  assign mulcsd_temp_18 = 
        $signed({delay_pipeline[22], 11'b00000000000}) -
        $signed({delay_pipeline[22], 9'b000000000}) +
        $signed({delay_pipeline[22], 7'b0000000}) -
        $signed({delay_pipeline[22], 4'b0000});
  assign product23 = mulcsd_temp_18[22:0];

  assign mulcsd_temp_19 = 
        $signed({delay_pipeline[21], 11'b00000000000}) -
        $signed({delay_pipeline[21], 9'b000000000}) +
        $signed({delay_pipeline[21], 8'b00000000}) -
        $signed({delay_pipeline[21], 5'b00000}) +
        $signed({delay_pipeline[21], 1'b0});
  assign product22 = mulcsd_temp_19[22:0];

  assign mulcsd_temp_20 = 
        $signed({delay_pipeline[20], 11'b00000000000}) -
        $signed({delay_pipeline[20], 8'b00000000}) +
        $signed({delay_pipeline[20], 3'b000}) +
        delay_pipeline[20];
  assign product21 = mulcsd_temp_20[22:0];

  assign mulcsd_temp_21 = 
        $signed({delay_pipeline[19], 11'b00000000000}) -
        $signed({delay_pipeline[19], 9'b000000000}) +
        $signed({delay_pipeline[19], 8'b00000000}) -
        $signed({delay_pipeline[19], 5'b00000}) +
        $signed({delay_pipeline[19], 1'b0});
  assign product20 = mulcsd_temp_21[22:0];

  assign mulcsd_temp_22 = 
        $signed({delay_pipeline[18], 11'b00000000000}) -
        $signed({delay_pipeline[18], 9'b000000000}) +
        $signed({delay_pipeline[18], 7'b0000000}) -
        $signed({delay_pipeline[18], 4'b0000});
  assign product19 = mulcsd_temp_22[22:0];

  assign mulcsd_temp_23 = 
        $signed({delay_pipeline[17], 10'b0000000000}) +
        $signed({delay_pipeline[17], 9'b000000000}) -
        $signed({delay_pipeline[17], 7'b0000000}) +
        $signed({delay_pipeline[17], 6'b000000}) -
        $signed({delay_pipeline[17], 2'b00}) +
        delay_pipeline[17];
  assign product18 = mulcsd_temp_23;

  assign mulcsd_temp_24 = 
        $signed({delay_pipeline[16], 10'b0000000000}) +
        $signed({delay_pipeline[16], 8'b00000000}) -
        $signed({delay_pipeline[16], 6'b000000}) +
        $signed({delay_pipeline[16], 5'b00000}) -
        $signed({delay_pipeline[16], 3'b000});
  assign product17 = mulcsd_temp_24;

  assign mulcsd_temp_25 = 
        $signed({delay_pipeline[15], 10'b0000000000}) -
        $signed({delay_pipeline[15], 6'b000000}) +
        $signed({delay_pipeline[15], 4'b0000}) +
        $signed({delay_pipeline[15], 2'b00}) +
        delay_pipeline[15];
  assign product16 = mulcsd_temp_25;

  assign mulcsd_temp_26 = 
        $signed({delay_pipeline[14], 9'b000000000}) +
        $signed({delay_pipeline[14], 8'b00000000}) -
        $signed({delay_pipeline[14], 6'b000000}) +
        $signed({delay_pipeline[14], 3'b000}) -
        delay_pipeline[14];
  assign product15 = $signed({{1{mulcsd_temp_26[21]}}, mulcsd_temp_26});

  assign mulcsd_temp_27 = 
        $signed({delay_pipeline[13], 9'b000000000}) -
        $signed({delay_pipeline[13], 6'b000000}) +
        $signed({delay_pipeline[13], 1'b0});
  assign product14 = $signed({{1{mulcsd_temp_27[21]}}, mulcsd_temp_27});

  assign mulcsd_temp_28 = 
        $signed({delay_pipeline[12], 8'b00000000}) -
        $signed({delay_pipeline[12], 6'b000000}) +
        $signed({delay_pipeline[12], 4'b0000}) +
        $signed({delay_pipeline[12], 3'b000}) -
        delay_pipeline[12];
  assign product13 = $signed({{2{mulcsd_temp_28[20]}}, mulcsd_temp_28});

  assign mulcsd_temp_29 = 
        $signed({delay_pipeline[11], 4'b0000}) +
        $signed({delay_pipeline[11], 2'b00}) -
        delay_pipeline[11];
  assign product12 = $signed({{6{mulcsd_temp_29[16]}}, mulcsd_temp_29});

  assign mulcsd_temp_30 = - (
        $signed({delay_pipeline[10], 7'b0000000}) +
        $signed({delay_pipeline[10], 1'b0}));
  assign product11 = $signed({{3{mulcsd_temp_30[19]}}, mulcsd_temp_30});

  assign mulcsd_temp_31 = - (
        $signed({delay_pipeline[9], 8'b00000000}) -
        $signed({delay_pipeline[9], 5'b00000}) +
        $signed({delay_pipeline[9], 3'b000}) -
        $signed({delay_pipeline[9], 1'b0}));
  assign product10 = $signed({{2{mulcsd_temp_31[20]}}, mulcsd_temp_31});

  assign mulcsd_temp_32 = - (
        $signed({delay_pipeline[8], 8'b00000000}) +
        $signed({delay_pipeline[8], 5'b00000}) -
        $signed({delay_pipeline[8], 3'b000}) +
        $signed({delay_pipeline[8], 2'b00}) -
        delay_pipeline[8]);
  assign product9 = $signed({{2{mulcsd_temp_32[20]}}, mulcsd_temp_32});

  assign mulcsd_temp_33 = - (
        $signed({delay_pipeline[7], 8'b00000000}) +
        $signed({delay_pipeline[7], 5'b00000}) +
        $signed({delay_pipeline[7], 3'b000}));
  assign product8 = $signed({{2{mulcsd_temp_33[20]}}, mulcsd_temp_33});

  assign mulcsd_temp_34 = - (
        $signed({delay_pipeline[6], 8'b00000000}) +
        $signed({delay_pipeline[6], 4'b0000}) +
        $signed({delay_pipeline[6], 2'b00}) +
        delay_pipeline[6]);
  assign product7 = $signed({{2{mulcsd_temp_34[20]}}, mulcsd_temp_34});

  assign mulcsd_temp_35 = - (
        $signed({delay_pipeline[5], 8'b00000000}) -
        $signed({delay_pipeline[5], 5'b00000}) +
        $signed({delay_pipeline[5], 4'b0000}) -
        $signed({delay_pipeline[5], 2'b00}) +
        delay_pipeline[5]);
  assign product6 = $signed({{2{mulcsd_temp_35[20]}}, mulcsd_temp_35});

  assign mulcsd_temp_36 = - (
        $signed({delay_pipeline[4], 7'b0000000}) +
        $signed({delay_pipeline[4], 6'b000000}) -
        $signed({delay_pipeline[4], 3'b000}) +
        $signed({delay_pipeline[4], 1'b0}));
  assign product5 = $signed({{3{mulcsd_temp_36[19]}}, mulcsd_temp_36});

  assign mulcsd_temp_37 = - (
        $signed({delay_pipeline[3], 7'b0000000}) +
        $signed({delay_pipeline[3], 3'b000}) -
        $signed({delay_pipeline[3], 1'b0}));
  assign product4 = $signed({{3{mulcsd_temp_37[19]}}, mulcsd_temp_37});

  assign mulcsd_temp_38 = - (
        $signed({delay_pipeline[2], 6'b000000}) +
        $signed({delay_pipeline[2], 5'b00000}) -
        $signed({delay_pipeline[2], 3'b000}));
  assign product3 = $signed({{4{mulcsd_temp_38[18]}}, mulcsd_temp_38});

  assign mulcsd_temp_39 = - (
        $signed({delay_pipeline[1], 6'b000000}) -
        delay_pipeline[1]);
  assign product2 = $signed({{4{mulcsd_temp_39[18]}}, mulcsd_temp_39});

  assign product1_cast = $signed({{4{product1[22]}}, product1});

  assign mulcsd_temp_40 = 
        $signed({delay_pipeline[0], 4'b0000}) -
        $signed({delay_pipeline[0], 2'b00}) +
        delay_pipeline[0];
  assign product1 = $signed({{6{mulcsd_temp_40[16]}}, mulcsd_temp_40});

  assign add_signext = product1_cast;
  assign add_signext_1 = $signed({{4{product2[22]}}, product2});
  assign add_temp = add_signext + add_signext_1;
  assign sum1 = add_temp[26:0];

  assign add_signext_2 = sum1;
  assign add_signext_3 = $signed({{4{product3[22]}}, product3});
  assign add_temp_1 = add_signext_2 + add_signext_3;
  assign sum2 = add_temp_1[26:0];

  assign add_signext_4 = sum2;
  assign add_signext_5 = $signed({{4{product4[22]}}, product4});
  assign add_temp_2 = add_signext_4 + add_signext_5;
  assign sum3 = add_temp_2[26:0];

  assign add_signext_6 = sum3;
  assign add_signext_7 = $signed({{4{product5[22]}}, product5});
  assign add_temp_3 = add_signext_6 + add_signext_7;
  assign sum4 = add_temp_3[26:0];

  assign add_signext_8 = sum4;
  assign add_signext_9 = $signed({{4{product6[22]}}, product6});
  assign add_temp_4 = add_signext_8 + add_signext_9;
  assign sum5 = add_temp_4[26:0];

  assign add_signext_10 = sum5;
  assign add_signext_11 = $signed({{4{product7[22]}}, product7});
  assign add_temp_5 = add_signext_10 + add_signext_11;
  assign sum6 = add_temp_5[26:0];

  assign add_signext_12 = sum6;
  assign add_signext_13 = $signed({{4{product8[22]}}, product8});
  assign add_temp_6 = add_signext_12 + add_signext_13;
  assign sum7 = add_temp_6[26:0];

  assign add_signext_14 = sum7;
  assign add_signext_15 = $signed({{4{product9[22]}}, product9});
  assign add_temp_7 = add_signext_14 + add_signext_15;
  assign sum8 = add_temp_7[26:0];

  assign add_signext_16 = sum8;
  assign add_signext_17 = $signed({{4{product10[22]}}, product10});
  assign add_temp_8 = add_signext_16 + add_signext_17;
  assign sum9 = add_temp_8[26:0];

  assign add_signext_18 = sum9;
  assign add_signext_19 = $signed({{4{product11[22]}}, product11});
  assign add_temp_9 = add_signext_18 + add_signext_19;
  assign sum10 = add_temp_9[26:0];

  assign add_signext_20 = sum10;
  assign add_signext_21 = $signed({{4{product12[22]}}, product12});
  assign add_temp_10 = add_signext_20 + add_signext_21;
  assign sum11 = add_temp_10[26:0];

  assign add_signext_22 = sum11;
  assign add_signext_23 = $signed({{4{product13[22]}}, product13});
  assign add_temp_11 = add_signext_22 + add_signext_23;
  assign sum12 = add_temp_11[26:0];

  assign add_signext_24 = sum12;
  assign add_signext_25 = $signed({{4{product14[22]}}, product14});
  assign add_temp_12 = add_signext_24 + add_signext_25;
  assign sum13 = add_temp_12[26:0];

  assign add_signext_26 = sum13;
  assign add_signext_27 = $signed({{4{product15[22]}}, product15});
  assign add_temp_13 = add_signext_26 + add_signext_27;
  assign sum14 = add_temp_13[26:0];

  assign add_signext_28 = sum14;
  assign add_signext_29 = $signed({{4{product16[22]}}, product16});
  assign add_temp_14 = add_signext_28 + add_signext_29;
  assign sum15 = add_temp_14[26:0];

  assign add_signext_30 = sum15;
  assign add_signext_31 = $signed({{4{product17[22]}}, product17});
  assign add_temp_15 = add_signext_30 + add_signext_31;
  assign sum16 = add_temp_15[26:0];

  assign add_signext_32 = sum16;
  assign add_signext_33 = $signed({{4{product18[22]}}, product18});
  assign add_temp_16 = add_signext_32 + add_signext_33;
  assign sum17 = add_temp_16[26:0];

  assign add_signext_34 = sum17;
  assign add_signext_35 = $signed({{4{product19[22]}}, product19});
  assign add_temp_17 = add_signext_34 + add_signext_35;
  assign sum18 = add_temp_17[26:0];

  assign add_signext_36 = sum18;
  assign add_signext_37 = $signed({{4{product20[22]}}, product20});
  assign add_temp_18 = add_signext_36 + add_signext_37;
  assign sum19 = add_temp_18[26:0];

  assign add_signext_38 = sum19;
  assign add_signext_39 = $signed({{4{product21[22]}}, product21});
  assign add_temp_19 = add_signext_38 + add_signext_39;
  assign sum20 = add_temp_19[26:0];

  assign add_signext_40 = sum20;
  assign add_signext_41 = $signed({{4{product22[22]}}, product22});
  assign add_temp_20 = add_signext_40 + add_signext_41;
  assign sum21 = add_temp_20[26:0];

  assign add_signext_42 = sum21;
  assign add_signext_43 = $signed({{4{product23[22]}}, product23});
  assign add_temp_21 = add_signext_42 + add_signext_43;
  assign sum22 = add_temp_21[26:0];

  assign add_signext_44 = sum22;
  assign add_signext_45 = $signed({{4{product24[22]}}, product24});
  assign add_temp_22 = add_signext_44 + add_signext_45;
  assign sum23 = add_temp_22[26:0];

  assign add_signext_46 = sum23;
  assign add_signext_47 = $signed({{4{product25[22]}}, product25});
  assign add_temp_23 = add_signext_46 + add_signext_47;
  assign sum24 = add_temp_23[26:0];

  assign add_signext_48 = sum24;
  assign add_signext_49 = $signed({{4{product26[22]}}, product26});
  assign add_temp_24 = add_signext_48 + add_signext_49;
  assign sum25 = add_temp_24[26:0];

  assign add_signext_50 = sum25;
  assign add_signext_51 = $signed({{4{product27[22]}}, product27});
  assign add_temp_25 = add_signext_50 + add_signext_51;
  assign sum26 = add_temp_25[26:0];

  assign add_signext_52 = sum26;
  assign add_signext_53 = $signed({{4{product28[22]}}, product28});
  assign add_temp_26 = add_signext_52 + add_signext_53;
  assign sum27 = add_temp_26[26:0];

  assign add_signext_54 = sum27;
  assign add_signext_55 = $signed({{4{product29[22]}}, product29});
  assign add_temp_27 = add_signext_54 + add_signext_55;
  assign sum28 = add_temp_27[26:0];

  assign add_signext_56 = sum28;
  assign add_signext_57 = $signed({{4{product30[22]}}, product30});
  assign add_temp_28 = add_signext_56 + add_signext_57;
  assign sum29 = add_temp_28[26:0];

  assign add_signext_58 = sum29;
  assign add_signext_59 = $signed({{4{product31[22]}}, product31});
  assign add_temp_29 = add_signext_58 + add_signext_59;
  assign sum30 = add_temp_29[26:0];

  assign add_signext_60 = sum30;
  assign add_signext_61 = $signed({{4{product32[22]}}, product32});
  assign add_temp_30 = add_signext_60 + add_signext_61;
  assign sum31 = add_temp_30[26:0];

  assign add_signext_62 = sum31;
  assign add_signext_63 = $signed({{4{product33[22]}}, product33});
  assign add_temp_31 = add_signext_62 + add_signext_63;
  assign sum32 = add_temp_31[26:0];

  assign add_signext_64 = sum32;
  assign add_signext_65 = $signed({{4{product34[22]}}, product34});
  assign add_temp_32 = add_signext_64 + add_signext_65;
  assign sum33 = add_temp_32[26:0];

  assign add_signext_66 = sum33;
  assign add_signext_67 = $signed({{4{product35[22]}}, product35});
  assign add_temp_33 = add_signext_66 + add_signext_67;
  assign sum34 = add_temp_33[26:0];

  assign add_signext_68 = sum34;
  assign add_signext_69 = $signed({{4{product36[22]}}, product36});
  assign add_temp_34 = add_signext_68 + add_signext_69;
  assign sum35 = add_temp_34[26:0];

  assign add_signext_70 = sum35;
  assign add_signext_71 = $signed({{4{product37[22]}}, product37});
  assign add_temp_35 = add_signext_70 + add_signext_71;
  assign sum36 = add_temp_35[26:0];

  assign add_signext_72 = sum36;
  assign add_signext_73 = $signed({{4{product38[22]}}, product38});
  assign add_temp_36 = add_signext_72 + add_signext_73;
  assign sum37 = add_temp_36[26:0];

  assign add_signext_74 = sum37;
  assign add_signext_75 = $signed({{4{product39[22]}}, product39});
  assign add_temp_37 = add_signext_74 + add_signext_75;
  assign sum38 = add_temp_37[26:0];

  assign add_signext_76 = sum38;
  assign add_signext_77 = $signed({{4{product40[22]}}, product40});
  assign add_temp_38 = add_signext_76 + add_signext_77;
  assign sum39 = add_temp_38[26:0];

  assign add_signext_78 = sum39;
  assign add_signext_79 = $signed({{4{product41[22]}}, product41});
  assign add_temp_39 = add_signext_78 + add_signext_79;
  assign sum40 = add_temp_39[26:0];

  always @ (posedge clk or posedge reset)
    begin: Output_Register_process
      if (reset == 1'b1) begin
        output_register <= 0;
      end
      else begin
        if (clk_enable == 1'b1) begin
          output_register <= sum40;
        end
      end
    end // Output_Register_process

  // Assignment Statements
  assign filter_out = output_register;
endmodule  // FIR_125K_10K_LPF
